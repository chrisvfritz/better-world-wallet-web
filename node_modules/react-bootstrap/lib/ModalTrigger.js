'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _interopRequireDefault = function (obj) { return obj && obj.__esModule ? obj : { 'default': obj }; };

var _React$cloneElement = require('react');

var _React$cloneElement2 = _interopRequireDefault(_React$cloneElement);

var _OverlayMixin = require('./OverlayMixin');

var _OverlayMixin2 = _interopRequireDefault(_OverlayMixin);

var _createChainedFunction = require('./utils/createChainedFunction');

var _createChainedFunction2 = _interopRequireDefault(_createChainedFunction);

var ModalTrigger = _React$cloneElement2['default'].createClass({
  displayName: 'ModalTrigger',

  mixins: [_OverlayMixin2['default']],

  propTypes: {
    modal: _React$cloneElement2['default'].PropTypes.node.isRequired
  },

  getInitialState: function getInitialState() {
    return {
      isOverlayShown: false
    };
  },

  show: function show() {
    this.setState({
      isOverlayShown: true
    });
  },

  hide: function hide() {
    this.setState({
      isOverlayShown: false
    });
  },

  toggle: function toggle() {
    this.setState({
      isOverlayShown: !this.state.isOverlayShown
    });
  },

  renderOverlay: function renderOverlay() {
    if (!this.state.isOverlayShown) {
      return _React$cloneElement2['default'].createElement('span', null);
    }

    return _React$cloneElement.cloneElement(this.props.modal, {
      onRequestHide: this.hide
    });
  },

  render: function render() {
    var child = _React$cloneElement2['default'].Children.only(this.props.children);
    var props = {};

    props.onClick = _createChainedFunction2['default'](child.props.onClick, this.toggle);
    props.onMouseOver = _createChainedFunction2['default'](child.props.onMouseOver, this.props.onMouseOver);
    props.onMouseOut = _createChainedFunction2['default'](child.props.onMouseOut, this.props.onMouseOut);
    props.onFocus = _createChainedFunction2['default'](child.props.onFocus, this.props.onFocus);
    props.onBlur = _createChainedFunction2['default'](child.props.onBlur, this.props.onBlur);

    return _React$cloneElement.cloneElement(child, props);
  }
});

exports['default'] = ModalTrigger;
module.exports = exports['default'];